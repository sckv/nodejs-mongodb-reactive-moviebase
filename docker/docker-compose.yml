version: '3.6'
services:
  mongo:
    image: mongo:4.0.6-xenial
    restart: on-failure
    networks:
      - backendmesh
    tty: true
    hostname: mongo
    volumes:
      - mongo-data:/etc/mongo
    command: ["--replSet", "rs", "--bind_ip_all"]
    # ports:
    #   - 27017:27017

  redis:
    image: redis:4.0.5-alpine
    restart: on-failure
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    networks:
      - backendmesh
    tty: true
    volumes:
      - redis-data:/data
    # ports:
    #   - 6379:6379

  envoy:
    build:
      context: ./envoy
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
    networks:
      - backendmesh
    command: /usr/local/bin/envoy -c /etc/envoy.yaml
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy.yaml
    tty: true

  movies:
    build:
      context: ./node
    restart: on-failure
    networks:
      - backendmesh
    tty: true
    env_file:
      - ../.env
    volumes:
      - ../server/build:/app
      - ../pm2:/app/pm2
      - ../server/cert:/app/cert
      - ../package.json:/app/package.json
      - /app/node_modules
    command: pm2-runtime /app/pm2/movies.config.js
    depends_on:
      - mongo

  cache:
    build:
      context: ./node
    restart: on-failure
    networks:
      - backendmesh
    tty: true
    env_file:
      - ../.env
    volumes:
      - ../server/build:/app
      - ../pm2:/app/pm2
      - ../server/cert:/app/cert
      - ../package.json:/app/package.json
      - /app/node_modules
    command: pm2-runtime /app/pm2/cache.config.js
    depends_on:
      - redis


  email:
    build:
      context: ./node
    restart: on-failure
    networks:
      - backendmesh
    tty: true
    env_file:
      - ../.env.email
    volumes:
      - ../server/build:/app
      - ../pm2:/app/pm2
      - ../server/cert:/app/cert
      - ../package.json:/app/package.json
      - /app/node_modules
    command: pm2-runtime /app/pm2/email.config.js
    depends_on:
      - redis

  auth:
    build:
      context: ./node
    restart: on-failure
    networks:
      - backendmesh
    tty: true
    env_file:
      - ../.env
    volumes:
      - ../server/build:/app
      - ../pm2:/app/pm2
      - ../server/cert:/app/cert
      - ../package.json:/app/package.json
      - /app/node_modules
    command: pm2-runtime /app/pm2/auth.config.js
    depends_on:
      - mongo

  listing:
    build:
      context: ./node
    restart: on-failure
    networks:
      - backendmesh
    tty: true
    env_file:
      - ../.env
    volumes:
      - ../server/build:/app
      - ../pm2:/app/pm2
      - ../server/cert:/app/cert
      - ../package.json:/app/package.json
      - /app/node_modules
    command: pm2-runtime /app/pm2/listing.config.js
    depends_on:
      - mongo

  users:
    build:
      context: ./node
    restart: on-failure
    networks:
      - backendmesh
    tty: true
    env_file:
      - ../.env
    volumes:
      - ../server/build:/app
      - ../pm2:/app/pm2
      - ../server/cert:/app/cert
      - ../package.json:/app/package.json
      - /app/node_modules
    command: pm2-runtime /app/pm2/users.config.js
    depends_on:
      - mongo

  nginx:
    build:
      context: ./nginx
    restart: on-failure
    networks:
      - backendmesh
    volumes:
      # - ~/nginx_certs:/etc/nginx/certs
      # - ~/letsencrypt_www:/var/www/letsencrypt
      - ../server/cert/:/etc/nginx/certs
      - ../client/build:/var/www
      - ~/app-logs/nginx:/var/log/nginx
      - ./nginx/sites:/etc/nginx/sites-available
    tty: true

volumes:
  data:
    driver: local
  redis-data:
    driver: local
  mongo-data:
    driver: local

networks:
  backendmesh: {}
