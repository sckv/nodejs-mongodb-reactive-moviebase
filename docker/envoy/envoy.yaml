
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          stream_idle_timeout: 1800s
          access_log:
            - name: envoy.file_access_log
              typed_config:
                "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
                path: "/tmp/access.log"
          route_config:
            name: local_route
            virtual_hosts:
            - name: services
              domains:
              - "*"
              routes:

              - match:
                  prefix: "/api/auth/"
                route:
                  cluster: auth_service
                  prefix_rewrite: "/"
                  timeout: 60s
              - match:
                  prefix: "/api/movies/"
                route:
                  cluster: movies_service
                  prefix_rewrite: "/"
                  timeout: 9999s
              - match:
                  prefix: "/api/lists/"
                route:
                  cluster: listing_service
                  timeout: 60s
                  prefix_rewrite: "/"
              - match:
                  prefix: "/api/users/"
                route:
                  cluster: users_service
                  timeout: 60s
                  prefix_rewrite: "/"
              - match:
                  prefix: "/"
                route:
                  cluster: front_service
              cors:
                allow_origin:
                  - "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS, PATCH
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-user-agent
                max_age: "1728000"
                expose_headers: content-type,transfer-encoding,x-runtime,x-request-id,etag,content-transfer-encoding
                enabled: true
          http_filters:
            - name: envoy.router
              typed_config: {}
            - name: envoy.cors
              typed_config: {}
      tls_context:
        common_tls_context:
          alpn_protocols: [ "h2,http/1.1" ]
          tls_certificates:
            - certificate_chain:
                filename: "/etc/server.crt"
              private_key:
                filename: "/etc/server.key"
  clusters:
  - name: auth_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    tls_context:
      common_tls_context:
        alpn_protocols: "h2"
      sni: auth:443
    http2_protocol_options: {}
    load_assignment:
      cluster_name: auth_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth
                port_value: 443
  - name: movies_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    tls_context:
      common_tls_context:
        alpn_protocols: "h2"
      sni: movies:443
    http2_protocol_options: {}
    load_assignment:
      cluster_name: movies_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: movies
                port_value: 443
  - name: listing_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    tls_context:
      common_tls_context:
        alpn_protocols: "h2"
      sni: listing:443
    http2_protocol_options: {}
    load_assignment:
      cluster_name: listing_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: listing
                port_value: 443
  - name: users_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    tls_context:
      common_tls_context:
        alpn_protocols: "h2"
      sni: users:443
    http2_protocol_options: {}
    load_assignment:
      cluster_name: users_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: users
                port_value: 443
  - name: front_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    tls_context:
      common_tls_context:
        alpn_protocols: "h2"
      sni: users:443
    http2_protocol_options: {}
    load_assignment:
      cluster_name: front_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: nginx
                port_value: 443
cluster_manager:
  outlier_detection:
    event_log_path: /tmp/outlier_events.log
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081
